matrix:
  include:
  - language: go
    install:
    - pip install --user awscli
    before_script: cd api
    script: go test
    before_deploy: cd $TRAVIS_BUILD_DIR
    deploy:
    - provider: script
      script: make deploy-api
    notifications:
      slack: networth-app:QND6oXSeOjfeWIGuLHLOZCSu
      on_pull_requests: false
      on_failure: always
      on_success: always

  - language: go
    install:
    - pip install --user awscli
    before_script: cd api/dbstream
    script: go test
    before_deploy: cd ${TRAVIS_BUILD_DIR}
    deploy:
    - provider: script
      script: make deploy-dbstream
     notifications:
      slack: networth-app:QND6oXSeOjfeWIGuLHLOZCSu
      on_pull_requests: false
      on_failure: always
      on_success: always
  - language: go
    install:
    - pip install --user awscli
    before_script: cd api/notification
    script: go test
    before_deploy: cd ${TRAVIS_BUILD_DIR}
    deploy:
    - provider: script
      script: make deploy-notification
     notifications:
      slack: networth-app:QND6oXSeOjfeWIGuLHLOZCSu
      on_pull_requests: false
      on_failure: always
      on_success: always

  - language: node_js
    node_js: 10
    before_install: cd web
    install:
    - pip install --user awscli
    - npm i
    script:
    - npm test
    - npm run build
    deploy:
    - provider: s3
      access_key_id: $AWS_ACCESS_KEY_ID
      secret_access_key: $AWS_SECRET_ACCESS_KEY
      bucket: ${LANDING_S3_BUCKET}
      local-dir: ${TRAVIS_BUILD_DIR}/landing
      acl: public_read
      skip_cleanup: true
    - provider: s3
      access_key_id: $AWS_ACCESS_KEY_ID
      secret_access_key: $AWS_SECRET_ACCESS_KEY
      bucket: ${WEBAPP_S3_BUCKET}
      upload-dir: app
      local-dir: ${TRAVIS_BUILD_DIR}/web/build
      acl: public_read
      skip_cleanup: true
    after_deploy:
    - aws cloudfront create-invalidation --paths '/*' --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID}
    notifications:
      slack: networth-app:QND6oXSeOjfeWIGuLHLOZCSu
      on_pull_requests: false
      on_failure: always
      on_success: always
