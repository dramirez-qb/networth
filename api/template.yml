AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: networth.app REST API Lambda

Parameters:
  AppName:
    Type: String
    Default: networth
  DomainName:
    Type: String
    Default: networth.app
  EnvPlaidClientID:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: /networth/PLAID_CLIENT_ID
  EnvPlaidSecret:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: /networth/PLAID_SECRET

Globals:
  Api:
    Cors: "'https://dev.trddev.com'"

Resources:
  # ApiGatewayApi:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     Name: !Ref AppName
  #     StageName: latest
  #     EndpointConfiguration: REGIONAL
  #     Cors: !Ref DomainName
  #     DefinitionBody:
  #       swagger: "2.0"
  #       info:
  #         title: !Ref AWS::StackName
  #       securityDefinitions:
  #         networth-cognito-authorizer:
  #           type: apiKey
  #           name: Authorization
  #           in: header
  #           x-amazon-apigateway-authtype: cognito_user_pools
  #           x-amazon-apigateway-authorizer:
  #             providerARNs:
  #               - Fn::ImportValue:
  #                   !Join ['-', [!Ref AppName, userpool]]
  #             type: cognito_user_pools
        # paths:
        #   /{proxy+}:
        #     x-amazon-apigateway-any-method:
        #       x-amazon-apigateway-integration:
        #         httpMethod: POST
        #         type: aws_proxy
        #         uri:
        #           !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NetWorthFunction.Arn}/invocations
        #       responses: {}
        #       security:
        #         - networth-cognito-authorizer: []
        #     options:
        #       consumes:
        #         - application/json
        #       produces:
        #         - application/json
        #       responses:
        #         "200":
        #           description: 200 response
        #           schema:
        #             $ref: "#/definitions/Empty"
        #           headers:
        #             Access-Control-Allow-Origin:
        #               type: string
        #             Access-Control-Allow-Methods:
        #               type: string
        #             Access-Control-Allow-Headers:
        #               type: string
        #       x-amazon-apigateway-integration:
        #         responses:
        #           default:
        #             statusCode: 200
        #             responseParameters:
        #               method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
        #               method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        #               method.response.header.Access-Control-Allow-Origin: "'*'"
        #         passthroughBehavior: when_no_match
        #         requestTemplates:
        #           application/json: "{\"statusCode\": 200}"
        #         type: mock

  # APIGatewayBasePathMapping:
  #   Type: AWS::ApiGateway::BasePathMapping
  #   Properties:
  #     DomainName: !Ref DomainName
  #     RestApiId: !Ref ApiGatewayApi
  #     Stage: latest

  NetWorthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: go1.x
      CodeUri: ../bin
      # sam-cli doesn't support !Ref yet :(
      # Handler: !Ref AppName
      Handler: networth
      FunctionName: networth-api
      Description:  networth.app REST API
      Environment:
        Variables:
          TOKEN_TABLE:
            Fn::ImportValue:
              !Join [-, [ !Ref AppName, token, table]]
          HISTORY_TABLE:
            Fn::ImportValue:
              !Join [-, [ !Ref AppName, history, table]]
          TRANSACTION_TABLE:
            Fn::ImportValue:
              !Join [-, [ !Ref AppName, transaction, table]]
          SNS_TOPIC_ARN:
            Fn::ImportValue:
              !Join [-, [ !Ref AppName, sns]]
          KMS_KEY_ALIAS:
            Fn::ImportValue:
              !Join [-, [ !Ref AppName, kms, alias]]
          PLAID_ENV: sandbox
          PLAID_PUBLIC_KEY: 7e599ac974fb8343f50fac8535fcf1
          PLAID_CLIENT_ID: !Ref EnvPlaidClientID
          PLAID_SECRET: !Ref EnvPlaidSecret
      Events:
        GetNetworth:
          Type: Api
          Properties:
            Path: /networth
            Method: get
            # RestApiId: !Ref ApiGatewayApi
        # GetApiProxyResource:
        #   Type: Api
        #   Properties:
        #     Path: /{proxy+}
        #     Method: any
        #     # RestApiId: !Ref ApiGatewayApi
